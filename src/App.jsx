import React from 'react';
import { WagmiProvider } from 'wagmi';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { config } from './wagmiConfig';
import EnhancedMobilePaymentFlow from './EnhancedMobilePaymentFlow';
import AppWithWagmi from './AppWithWagmi';

// Create a QueryClient instance
const queryClient = new QueryClient();

// Enhanced detection for mobile-optimized experience
const detectPaymentMode = () => {
  const params = new URLSearchParams(window.location.search);
  const isMobileParam = params.get('isMobile') === 'true';
  const paymentId = params.get('paymentId');
  const contractAddress = params.get('contractAddress');
  const tokenContract = params.get('tokenContract');

  // ⭐ OPTIMIZED: Only require paymentId - EnhancedMobilePaymentFlow will fetch missing data from backend
  const hasValidParams = !!paymentId;
  const hasFullParams = !!(paymentId && contractAddress && tokenContract);
  const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

  return {
    useEnhancedFlow: isMobileParam || (isMobileDevice && hasValidParams),
    hasValidParams,
    hasFullParams,
    isMobileDevice,
    paymentId,
    contractAddress,
    tokenContract
  };
};

const App = () => {
  const paymentMode = detectPaymentMode();

  console.log('🚀 Coinley Payment Screen Starting...', {
    mode: paymentMode.useEnhancedFlow ? 'Enhanced Mobile' : 'Legacy',
    hasValidParams: paymentMode.hasValidParams,
    isMobileDevice: paymentMode.isMobileDevice,
    userAgent: navigator.userAgent,
    url: window.location.href,
    paymentId: paymentMode.paymentId
  });

  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>
        {paymentMode.useEnhancedFlow && paymentMode.hasValidParams ? (
          // Use enhanced mobile flow for mobile devices with proper parameters
          <EnhancedMobilePaymentFlow />
        ) : paymentMode.hasValidParams ? (
          // Use legacy flow for desktop or devices without mobile flag
          <AppWithWagmi />
        ) : (
          // Show error for invalid parameters
          <div className="min-h-screen bg-gradient-to-br from-purple-50 to-blue-50 flex items-center justify-center p-4">
            <div className="bg-white rounded-2xl shadow-xl p-8 max-w-md w-full text-center">
              <div className="w-16 h-16 mx-auto bg-red-500 rounded-full flex items-center justify-center mb-4">
                <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                </svg>
              </div>
              <h1 className="text-2xl font-bold text-gray-800 mb-4">Invalid Payment Link</h1>
              <p className="text-gray-600 mb-6">
                This payment link is missing required parameters. Please use a valid payment link generated by Coinley.
              </p>
              <div className="bg-gray-50 rounded-lg p-4 mb-6 text-left">
                <h3 className="font-semibold text-gray-800 mb-2">Missing Parameters:</h3>
                <ul className="text-sm text-gray-600 space-y-1">
                  {!paymentMode.paymentId && <li>• Payment ID</li>}
                  {!paymentMode.contractAddress && <li>• Contract Address</li>}
                  {!paymentMode.tokenContract && <li>• Token Contract</li>}
                </ul>
              </div>
              <button
                onClick={() => window.close()}
                className="w-full bg-gray-600 text-white py-3 px-6 rounded-xl font-semibold hover:bg-gray-700"
              >
                Close Window
              </button>
            </div>
          </div>
        )}
      </QueryClientProvider>
    </WagmiProvider>
  );
};

export default App;